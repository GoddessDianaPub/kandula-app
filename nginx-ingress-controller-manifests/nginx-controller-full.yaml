apiVersion: v1
kind: Namespace
metadata:
  name: ingress-nginx

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: ingress-nginx-config
  namespace: ingress-nginx

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: ingress-nginx-sa
  namespace: ingress-nginx

---

apiVersion: v1
kind: Secret
metadata:
  name: kandula-sa-secret
  namespace: ingress-nginx
  annotations:
    kubernetes.io/service-account.name: ingress-nginx-sa
type: kubernetes.io/service-account-token 

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ingress-nginx-controller-cluster-role
rules:
- apiGroups: [""]
  resources: ["pods", "ingressclasses", "namespaces", "services", "endpoints"]
  verbs: ["get", "watch", "list"]
- apiGroups: ["extensions"]
  resources: ["ingresses"]
  verbs: ["get", "watch", "list"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingressclasses"]
  verbs: ["get", "watch", "list"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ingress-nginx-controller-cluster-role-bind
subjects:
- kind: ServiceAccount
  name: ingress-nginx-sa
  namespace: ingress-nginx
roleRef:
  kind: ClusterRole
  name: ingress-nginx-controller-cluster-role
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ingress-nginx-controller-role
  namespace: ingress-nginx
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "create", "update"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ingress-nginx-controller-role-binding
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx-controller-role
subjects:
- kind: ServiceAccount
  name: ingress-nginx-sa
  namespace: ingress-nginx

---

#apiVersion: v1
#kind: Service
#metadata:
#  name: ingress-nginx-service
#  namespace: ingress-nginx
#spec:
#  type: LoadBalancer
#  ports:
#  - port: 80
#    targetPort: 80
#    protocol: TCP
#    name: http
#  - port: 443
#    targetPort: 443
#    protocol: TCP
#    name: https
#  - port: 5000
#    targetPort: 5000
#    protocol: TCP
#    name: kandula
#  selector:
#    name: ingress-nginx
     
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      name: ingress-nginx
  template:
    metadata:
      labels:
        name: ingress-nginx
    spec:
      serviceAccountName: ingress-nginx-sa
      containers:
        - name: nginx-ingress-controller
          image: rancher/nginx-ingress-controller:nginx-1.7.0-rancher1
          args:
            - /nginx-ingress-controller
            - --configmap=$(POD_NAMESPACE)/nginx-config
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443


#      envFrom:
#        - configMapRef:
#            name: ingress-nginx-config  

---

apiVersion: v1
kind: Service
metadata:
  name: ingress-nginx-service
  namespace: ingress-nginx
spec:
  type: ClusterIP
  selector:
    name: ingress-nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
    - protocol: TCP
      port: 443
      targetPort: 443
      
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-nginx-kandula
  namespace: ingress-nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/ssl-cert: "arn:aws:acm:us-east-1:735911875499:certificate/d416be11-bd15-404e-8bf5-a73a8b8e6e10"
spec:
  rules:
    - host: kandula.dianatop.lat
      http:
        paths:
          - path: /home
            pathType: Prefix
            backend:
              service:
                name: ingress-nginx-controller
                port:
                  number: 5000
