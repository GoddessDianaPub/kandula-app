
apiVersion: v1
kind: Namespace
metadata:
  name: kandula

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: kandula-sa
  namespace: kandula
  annotations:
    eks.amazonaws.com/role-arn-with-oidc: arn:aws:iam::735911875499:role/opsschool-project-oidc-role
    eks.amazonaws.com/role-arn-sa-eks-role: arn:aws:iam::735911875499:role/opsschool-project-sa-eks-role
    
    
#---
    
#apiVersion: v1
#kind: Secret
#metadata:
#  name: kandula-sa-secret
#  namespace: kandula
#  annotations:
#    kubernetes.io/service-account.name: kandula-sa
#type: kubernetes.io/service-account-token 

---
#Creating a configMap to use variables
apiVersion: v1
kind: ConfigMap
metadata:
  name: kandula-config
  namespace: kandula
data:
  FLASK_APP: "run.py"
  FLASK_DEBUG: "1"

---
# Creating a deplyoment with kandula pod container

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kandula-app
  namespace: kandula
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kandula-app
  template:
    metadata:
      labels:
        app: kandula-app
    spec:
      serviceAccountName: kandula-sa
      containers:
      - name: kandula-app
        image: 735911875499.dkr.ecr.us-east-1.amazonaws.com/kandula:latest
        ports:
        - containerPort: 5000
        envFrom:
          - configMapRef:
                name: kandula-config
#          - secretRef:
#                name: kandula-secret
        resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"  
        
---

apiVersion: v1
kind: Service
metadata:
  name: kandula-service
  namespace: kandula
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 5000
    protocol: TCP
  selector:
    app: kandula-app


#Exposing the pod to access the app using a web browser

#apiVersion: v1
#kind: Service
#metadata:
#  name: kandula-service
#  namespace: kandula
#spec:
#  type: LoadBalancer
#  ports:
#  - port: 80
#    targetPort: 5000
#    protocol: TCP
#  selector:
#    app: kandula-app

---
#Creates HPA for memory and CPU

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: kandula-hpa
  namespace: kandula
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: kandula-app
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 70
#    - type: ContainerResource
#      containerResource:
#        name: cpu
#        container: application
#        target:
#          type: Utilization
#          averageUtilization: 60
  behavior:
    scaleDown:
      policies:
      - type: Pods
        value: 2
        periodSeconds: 60
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 2
        periodSeconds: 15
      selectPolicy: Max    